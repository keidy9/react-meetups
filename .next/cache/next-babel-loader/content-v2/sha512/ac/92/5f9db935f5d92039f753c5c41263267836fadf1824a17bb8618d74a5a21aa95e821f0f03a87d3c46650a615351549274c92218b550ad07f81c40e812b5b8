{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Alienware\\\\Desktop\\\\vs beginner code\\\\REACT udemy course\\\\NEXTjs\\\\pages\\\\index.js\",\n    _this = this;\n\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nvar HomePage = function HomePage(props) {\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, _this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, _this);\n}; // export const getServerSideProps = async (context) => {\n//   // getServerSideProps only runs for every request, better for data that changes frequently?\n//   const req = context.req;\n//   const res = context.res;\n//   // Fetch data from an API\n//   return {\n//     props: {\n//       meetips: DUMMY_MEETUPS,\n//     },\n//   };\n// };\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Alienware/Desktop/vs beginner code/REACT udemy course/NEXTjs/pages/index.js"],"names":["Fragment","Head","MeetupList","HomePage","props","meetups"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B;;AACA;AAAA,UAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD,CARD,C,CAUA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;KAtBMF,Q;;AAkDN,eAAeA,QAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst HomePage = (props) => {\r\n  return;\r\n  <Fragment>\r\n    <Head>\r\n      <title>React Meetups</title>\r\n    </Head>\r\n    <MeetupList meetups={props.meetups} />;\r\n  </Fragment>;\r\n};\r\n\r\n// export const getServerSideProps = async (context) => {\r\n//   // getServerSideProps only runs for every request, better for data that changes frequently?\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   // Fetch data from an API\r\n\r\n//   return {\r\n//     props: {\r\n//       meetips: DUMMY_MEETUPS,\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport const getStaticProps = async () => {\r\n  // Fetch data from an API\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://killer:xHYY56XLLTqQtmso@cluster0.dixuzc3.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.data.title,\r\n        address: meetup.data.address,\r\n        image: meetup.data.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 10, //rerenders the page on the server-side every 10 seconds, to rerender client-side for any changes so client-side page isnt outdated??\r\n  };\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}